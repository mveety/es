# Makefile for es ($Revision: 1.4 $)

# Some of the advice here is rather old and out of date.  The
# configuration of es will be improved by 0.9beta, but I didn't
# want to hunt out machines from now til eternity.

# comment out the CFLAGS -Wall if you're not using gcc,
# but i'd encourage you to compile with full warnings on.
# let us know what warnings you get, though we don't promise
# to shut them all up.  if you're using sun's SPARCcompiler
# we recommend -Xa mode.  if you're using the native alpha
# compile, we recommend -g3 -O -Olimit 1000.  on recent
# SGI Irix releases using the native compiler, you will
# probably need -xansi.

# see config.h for command-line -D flags you may want to use.
# if you're using SunOS 5 (Solaris 2), be sure to include
# -DSOLARIS in the CFLAGS, since sun made it difficult to
# detect which system you're running.  also, since sun really
# seems to have screwed up and removed both getrusage() and
# wait3() in Solaris 2, you should probably add -DBUILTIN_TIME=0
# to the cflags.  if you're running an OSF1 derivative, try -DOSF1.
# if you're using HP/UX do a -DHPUX.

# also, please use whatever -D flags you need to in order
# to get definitions of all signals from <sys/signal.h>.
# _POSIX_SOURCE, _XOPEN_SOURCE are the obvious ones.

.SUFFIXES: .o .c .so

.include "config.mk"
.include "vars.mk"

CFILES = @CFILEOPTS@
OFILES = @OFILEOPTS@
MODOFILES = @MODOFILES@
MODULES = @MODULES@

es	: ${OFILES} system.o
	${CC} -o es ${LDFLAGS} ${OFILES} system.o ${LIBS}

esdump	: ${OFILES} dump.o
	${CC} -o esdump ${LDFLAGS} ${OFILES} dump.o ${LIBS}

test_editor : test_editor.o editor.o
	${CC} -o test_editor ${LDFLAGS} test_editor.o editor.o

es_static : ${OFILES} system.o
	${CC} -static -o es_static ${LDFLAGS} ${OFILES} system.o ${LIBS}

.c.o :
	${CC} -c ${CFLAGS} ${MODCFLAGS} -o ${.TARGET} ${.IMPSRC}

.o.so :
	${CC} ${LDFLAGS} ${MODLDFLAGS} -shared -o ${.TARGET} ${.ALLSRC} ${MODLIBS} ${MODEXTRAAGS}

modules : ${MODULES}

clean	:
	rm -f es es_static ${OFILES} ${GEN} dump.o system.o version.c ${MODOFILES} ${MODULES}
	rm -f test_editor test_editor.o editor.o

distclean:	clean
	rm -f config.cache config.log config.h Makefile GNUmakefile cscope.out tags TAGS core cs.out config.status ltmain.sh
	rm -rf autom4te.cache config.mk
	rm -f ${OFILES:.o=.plist} ${MODOFILES:.o=.plist} system.plist dump.plist

MANIFEST:
	find . -type f | sed s/..// > MANIFEST

preinstall: es
	$(MKDIR_P) $(bindir)
	./es -Np preinstall.es $(bindir)

es-install: es
	$(INSTALL) -s $(srcdir)/es $(bindir)

docs-install: es
	$(MKDIR_P) $(mandir)/man1
	$(INSTALL) $(srcdir)/doc/es.1 $(mandir)/man1

esdebug-install:
	$(INSTALL) $(srcdir)/esdebug $(bindir)
	chmod +x $(bindir)/esdebug

install : es preinstall es-install docs-install esdebug-install

userlib-install : es
	./es -N libinstall.es $(srcdir)/libraries

syslib-install : es
	./es -N libinstall.es $(srcdir)/libraries $(datarootdir)/es


all : es modules

test	: estest

trip	: es $(srcdir)/trip.es
	./es < $(srcdir)/trip.es

estest : es
	./es -- ./estest -xyl

src	:
	@echo ${OTHER} ${CFILES} ${HFILES}

y.tab.c y.tab.h : parse.y
	${YACC} -vd $(srcdir)/parse.y

token.h : y.tab.h
	-cmp -s y.tab.h token.h || cp y.tab.h token.h

config.es:
	echo "# autogenerated file " > $(srcdir)/config.es
	echo "# normally I say you can't edit files like this, but this one" >> $(srcdir)/config.es
	echo "# you totally can if you wish. might have some weird outcomes though" >> $(srcdir)/config.es
	echo "corelib = '${datarootdir}/es'" >> $(srcdir)/config.es
	echo "es_conf_use_new_vars = true" >> $(srcdir)/config.es
	echo "es_enable_loginshell = ${ENABLE_LOGINSHELL}" >> $(srcdir)/config.es
	echo "es_conf_devfd_impl = ${DEVFD_IMPL}" >> $(srcdir)/config.es
	echo "es_conf_dynlibs = ${DYNAMIC_LIBRARIES}" >> $(srcdir)/config.es
	echo "set-es_conf_dynlibs = @{ result ${DYNAMIC_LIBRARIES} }" >> $(srcdir)/config.es
	echo "es_conf_dynlib-local-search = false" >> $(srcdir)/config.es
	echo "" >> $(srcdir)/config.es

system.c : esdump ${SYSLIB}
	cat ${SYSLIB} | ./esdump > system.c

sigmsgs.c : mksignal getsigfiles
	sh $(srcdir)/getsigfiles | xargs sh $(srcdir)/mksignal > sigmsgs.c

config.h  : config.h.in
	./configure

version.c : make_version es.h
	./make_version $(CC) > version.c

etags : ${HFILES} ${CFILES} parse.y
	etags ${HFILES} ${CFILES} parse.y

# for linux use:

# extra file rules
%.es:

.include "dependencies.mk"

