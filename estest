#!/usr/bin/env es
# vi: ft=es

fn info {
	echo '>>> info:' $*
}

fn lastelem elems {
	result $elems($#elems)
}

fn output {
	if {$print_failure_stderr} {
		echo >[1=2] $*
	} {
		echo $*
	}
}

dollar0 = $0
runbin = false
testoutput = false
estest_debugging = false
testpath = 'tests'
print_failure_output = true
print_failure_stderr = false
extra_es_args = false
always_yes = false
srcdir = '.'
fullhelp = false
verbose = false
subprocess_default = false
libdir = 'libraries'

(_ _ restargs) = <={parseargs @ arg {
	match $arg (
		(-h) { fullhelp = true ; usage }
		(-x) {
			runbin = true
			if {has_argument} {
				esbin = $flagarg
			}
		}
		(-b) {
			if {access -xf $flagarg} {
				esbin = $flagarg
			}
		}
		(-v) { verbose = true }
		(-V) { testoutput = true }
		(-d) { estest_debugging = true }
		(-q) { print_failure_output = false; testoutput = false }
		(-A) {
			extra_es_args = true; done
		}
		(-y) { always_yes = true }
		(-s) { subprocess_default = true }
		(-S) {
			srcdir = <={
				if {~ $flagarg */ } {
					result <={~~ $flagarg */}
				} {
					result $flagarg
				}
			}
			if {~ <={access -r1d $srcdir |> %count} 0 } {
				throw error $dollar0 $srcdir^' is not accessible'
			}
			if {~ $testpath 'tests'} {
				testpath = $srcdir/tests
			}
			if {~ $libdir 'libraries'} {
				libdir = $srcdir/libraries
			}
		}
		(-L) {
			libdir = <={
				if {~ $flagarg */ } {
					result <={~~ $flagarg */}
				} {
					result $flagarg
				}
			}
			if {~ <={access -r1d $libdir |> %count} 0 } {
				throw error $dollar0 $libdir^' is no accessible'
			}
		}
		(-p) {
			testpath = <={
				if {~ $flagarg */} {
					result <={~~ $flagarg */}
				} {
					result $flagarg
				}
			}
		}
		* { usage }
	)
} @{
	echo 'usage: '^$dollar0^' [-dvVqy] [-x [es binary]] [-S srcdir] [-p path] [-A es arguments]'
	if {$fullhelp} {
		cat << '%%end'
    flags:
        -d -- enable debugging
        -v -- verbose
        -V -- show test output in all cases
        -q -- quiet
        -y -- automatically answer yes
        -h -- show this message
        -s -- default to using subprocesses for tests

        -x [es binary]  -- run estest in a different instance of es
        -S srcdir       -- es source directory
        -p path         -- test cases path
        -L path         -- libraries path
        -A es arguments -- arguments to pass to instances of es

        -b es binary    -- set es binary
%%end
		exit 0
	} {
		exit 1
	}
} $*}

if {! access -rd $testpath} {
	throw error $dollar0 $testpath^' is not accessible'
}

if {~ $#esbin 0} {
	esbin = <={
		if {access -xf $srcdir/es} {
			result $srcdir/es
		} {
			result <={access -1n es -xf $path}
		}
	}
}

fn run_subproc_test testname testfn test_log tfp {
	info 'running '^$testname^'in pid '^$pid > $test_log
	catch @ e {
		if {! $$tfp} {
			echo 'got exception: '^$e
		}
		exit 1
	} {
		$testfn >> $test_log
	}
	exit 0
}

fn run_test_file file {
	assert2 $0 {eq $#file 1}
	lets (
		testname = <={~~ <={lastelem <={%split '/' $file}} test_*.es}
		passed = false
		test_exception=
		test_log='/tmp/es_'^$pid^'_test_'^$testname^'.log'
		tfp = 'test_'^$testname^'_fail_pass'
		tsp = 'test_'^$testname^'_subprocess'
	) {
		. $file
		if {~ <={%count $$tfp} 0} {
			$tfp = false
		}
		if {~ <={%count $$tsp} 0} {
			$tsp = $subprocess_default
		}
		catch @ e {
			test_exception = $e
			if {$$tfp} {
				passed = true
			} {
				passed = false
			}
		} {
			if {$$tsp} {
				escmd = $esbin
				if {$extra_es_args} { escmd = $escmd $restargs }
				escmd = $escmd -c 'run_subproc_test '^$testname^' run_test_'^$testname^' '^$test_log^' '^$tfp
				if {$estest_debugging} { info 'running: ' $escmd }
				if {! $escmd} {
					throw error run_subproc 'returned false'
				}
			} {
				run_test_$testname > $test_log
			}
			if {$$tfp} {
				passed = false
			} {
				passed = true
			}
		}
 		echo -n 'test '^$testname^': '
		if {$passed} {
			echo 'passed!'
			if {$testoutput} {
				output '>>> '^$testname^' output:'
				for(outline = ``(\n) {cat $test_log}) {
					output '>>>>>> '^$^outline
				}
			}
		} {
			echo 'failed!'
			echo '>>> exception: '^$^test_exception
			if {$print_failure_output} {
				output '>>> '^$testname^' output:'
				for(outline = ``(\n) {cat $test_log}) {
					output '>>>>>> '^$^outline
				}
			}
		}
	rm $test_log
	result $passed
	}
}

fn run_all_tests {
	for(i = $testfiles) {
		run_test_file $i
	}
}

if {$runbin} {
	debugarg = <={ if {$estest_debugging} { result '-d' } { result '' }}
	testoutputarg = <={ if {$testoutput} { result '-v' } { result '' }}
	cmdline = $esbin
	if {$extra_es_args} { cmdline = $cmdline $restargs }
	cmdline = $cmdline '--' $0
	if {$estest_debugging} { cmdline = $cmdline '-d' }
	if {$verbose} { cmdline = $cmdline '-v' }
	if {$testoutput} { cmdline = $cmdline '-V' }
	if {$always_yes} { cmdline = $cmdline '-y' }
	if {$subprocess_default} { cmdline = $cmdline '-s' }
	if {! ~ $srcdir '.'} {cmdline = $cmdline '-S' $srcdir}
	cmdline = $cmdline '-b' $esbin
	cmdline = $cmdline '-p' $testpath
	cmdline = $cmdline '-L' $libdir
	if {$extra_es_args} { cmdline = $cmdline '-A' $restargs }
	echo 'running:' $cmdline
	exit <={$cmdline}
} {
	libraries = $libdir
	info 'build: '^$buildstring
	info 'using '^<={%gcstats |> %first}^' garbage collector'
	info 'using libraries in '^$libraries^'/'
	info 'running tests in '^$testpath^'/'

	testfiles = <={
		process $testpath/*.es (
			(*/test_*) {
				if {access -xf $matchexpr} {
					if {$estest_debugging || $verbose} {
						info 'found '^$matchexpr
					}
					result $matchexpr
				} {
					if {$estest_debugging || $verbose} {
						info 'ignoring '^$matchexpr
					}
					result
				}
			}
			(*/util_*) {
				if {access -xf $matchexpr} {
					if {$estest_debugging || $verbose} {
						info 'loading '^$matchexpr
					}
					. $matchexpr
				}
				result
			}
			* { result }
		)
	}

	match $#testfiles (
		0 { info 'found no tests' }
		1 { info 'found 1 test' }
		* { info 'found '^$matchexpr^' tests' }
	)

	if {$always_yes} {
		run_all_tests
	} {
		echo -n 'run all tests [yes]? '
		r = <=%read
		if {~ $r '' || ~ $r [yY]*} {
			run_all_tests
		}
	}
	exit <=true
}
